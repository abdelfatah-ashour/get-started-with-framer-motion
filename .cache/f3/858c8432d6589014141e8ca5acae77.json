{"id":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","dependencies":[{"name":"C:\\Users\\Abdelfatah-Ashour\\Desktop\\get-started-with-framer-motion\\package.json","includedInParent":true,"mtime":1626883126678},{"name":"C:\\Users\\Abdelfatah-Ashour\\Desktop\\get-started-with-framer-motion\\node_modules\\framer-motion\\package.json","includedInParent":true,"mtime":1626862572287}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getValueAsType = void 0;\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nvar getValueAsType = function (value, type) {\n  return type && typeof value === \"number\" ? type.transform(value) : value;\n};\n\nexports.getValueAsType = getValueAsType;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":0}},{"name":"getValueAsType","generated":{"line":11,"column":4},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":4}},{"generated":{"line":11,"column":18},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":18}},{"generated":{"line":11,"column":21},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":21}},{"name":"value","generated":{"line":11,"column":31},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":31}},{"generated":{"line":11,"column":36},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":21}},{"name":"type","generated":{"line":11,"column":38},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":38}},{"generated":{"line":11,"column":42},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":44},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":44}},{"generated":{"line":12,"column":0},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":4}},{"name":"type","generated":{"line":12,"column":9},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":11}},{"generated":{"line":12,"column":13},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":15}},{"generated":{"line":12,"column":17},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":19}},{"name":"value","generated":{"line":12,"column":24},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":26}},{"generated":{"line":12,"column":29},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":19}},{"generated":{"line":12,"column":34},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":36}},{"generated":{"line":12,"column":42},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":11}},{"name":"type","generated":{"line":12,"column":45},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":6,"column":10}},{"generated":{"line":12,"column":49},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":6,"column":14}},{"name":"transform","generated":{"line":12,"column":50},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":6,"column":15}},{"generated":{"line":12,"column":59},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":6,"column":10}},{"name":"value","generated":{"line":12,"column":60},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":6,"column":25}},{"generated":{"line":12,"column":65},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":6,"column":10}},{"generated":{"line":12,"column":66},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":11}},{"name":"value","generated":{"line":12,"column":69},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":7,"column":10}},{"generated":{"line":12,"column":74},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":5,"column":4}},{"generated":{"line":13,"column":0},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":8,"column":1}},{"generated":{"line":13,"column":1},"source":"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js","original":{"line":4,"column":0}}],"sources":{"../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.js":"/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nvar getValueAsType = function (value, type) {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n"},"lineCount":null}},"error":null,"hash":"bb6089d19b9d4dbe8fd581c3d54f98d8","cacheData":{"env":{}}}